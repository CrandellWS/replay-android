apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSDKVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSDKVersion
        targetSdkVersion rootProject.ext.targetSDKVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testApplicationId "io.replay.framework.tests"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }
    lintOptions {
        abortOnError false
    }

    buildTypes {
        final def (STRING, REPLAY_URL) = ["String", "REPLAY_URL"]

        debug {
            debuggable true
            buildConfigField STRING, REPLAY_URL, "\"https://api.replay.io/\""
        }

        release {
            debuggable false
            buildConfigField STRING, REPLAY_URL, "\"https://api.replay.io/\""
        }
    }
}


dependencies {
    compile files('libs/jobqueue.jar')
}

task clearJar(type: Delete) {
    delete "build/libs/replay-android-${rootProject.ext.versionName-1}.jar"
    delete "build/libs/replay-android-${rootProject.ext.versionName}.jar"
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.core.BuilderConstants.RELEASE)) {
        def task = project.tasks.create "jar${name.capitalize()}", Jar
        task.dependsOn clearJar, variant.javaCompile
        task.from variant.javaCompile.destinationDir, configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        artifacts.add('archives', task);
    }
}

apply from: '../scripts/upload.gradle'
